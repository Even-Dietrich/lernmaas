#!/bin/bash
#
#   Erstellt fuer ein Modul VMs auf den KVM Hosts.
#

[ $# -lt 1 ] && { echo createvm modul; exit 1; }

# einfacher YAML Parser von https://stackoverflow.com/questions/5014632/how-can-i-parse-a-yaml-file-from-a-linux-shell-script
function parse_yaml 
{
   local prefix=$2
   local s='[[:space:]]*' w='[a-zA-Z0-9_]*' fs=$(echo @|tr @ '\034')
   sed -ne "s|^\($s\):|\1|" \
        -e "s|^\($s\)\($w\)$s:$s[\"']\(.*\)[\"']$s\$|\1$fs\2$fs\3|p" \
        -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p"  $1 |
   awk -F$fs '{
      indent = length($1)/2;
      vname[indent] = $2;
      for (i in vname) {if (i > indent) {delete vname[i]}}
      if (length($3) > 0) {
         vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
         printf("%s%s%s=%s\n", "'$prefix'",vn, $2, $3);
      }
   }'
}

################### Argumente Auswerten ###################

export HOST=$(echo $1 | cut -d- -f1)

# config.yaml parsen und als config_xxxx Umgebungsvariablen setzen
for e in $(eval parse_yaml ../config.yaml | grep "^${HOST}" | sed "s/^${HOST}/config/")
do
    export $e
done

################### Vagrantfile erzeugen und VM starten ###################

export HOSTNAME=$1
export HOSTIP=$(printf %u $(echo $1 | cut -d- -f2))
export MEMORY=${config_vm_memory}

mkdir -p $1/data
envsubst <Vagrantfile.template >$1/Vagrantfile
cd $1
vagrant up
start http://$1 /B
